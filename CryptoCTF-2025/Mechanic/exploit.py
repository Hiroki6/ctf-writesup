from quantcrypt.kem import MLKEM_1024
from quantcrypt.cipher import KryptonKEM
from pathlib import Path

kem = MLKEM_1024()
kry = KryptonKEM(MLKEM_1024)
sk_size = kem.param_sizes.sk_size

skeys = []
with open('output.raw', 'rb') as f:
    while True:
        chunk = f.read(sk_size)
        if not chunk:
            break
        skeys.append(chunk)

print(f"Loaded {len(skeys)} skey candidates.")

ciphertext_file = Path('flag_22.enc')

index = len(skeys)
layer = 22
while index > 0:
    try:
        skey = skeys[index-1]
        out_file = Path(f'decrypted_layer_{layer}.bin')
        kry.decrypt_to_file(skey, ciphertext_file, out_file)
        print(f"Successfully decrypted layer {layer} with skey {index}")
        ciphertext_file = out_file
        layer -= 1
    except Exception as e:
        # skip since this skey is a random one
        pass
    index -= 1
